// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Bidvalet.iOS.Utility;

namespace Bidvalet.iOS
{
	public partial class CitiesPickerVC : UIViewController
	{
		public delegate void ItemSelectedEventHandler(string value);
		public event ItemSelectedEventHandler PickedItem;
        LoadingOverlay loadingOverlay; 

		public CitiesPickerVC (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			Title = "Cities";
			collectionView.RegisterNibForCell (CitiesPickerCell.Nib, CitiesPickerCell.Key);
			collectionView.Source = new CitiesPickerSource (this);
		}
		// fire the event
		public void ItemSelected(string value)
		{
            try
            {
                if (PickedItem != null && value != "Select")
                {
                    PickedItem(value);

                    this.NavigationController.TopViewController.NavigationItem.SetHidesBackButton(true, true);
                    loadingOverlay = new LoadingOverlay(View.Bounds, "Loading...");
                    View.Add(loadingOverlay);

                    InvokeInBackground(() =>
                    {

                        BidAutoCalculateCommuteTimes bidAutoCalculateCommuteTimes = new BidAutoCalculateCommuteTimes();
                        bidAutoCalculateCommuteTimes.CalculateDailyCommutableTimes(value);

                        InvokeOnMainThread(() =>
                        {

                            if (bidAutoCalculateCommuteTimes.ErrorMessage != string.Empty)
                            {
                                DisplayAlertView(GlobalSettings.ApplicationName, bidAutoCalculateCommuteTimes.ErrorMessage);
                            }
                            //else
                            //{
                            //    string fileToSave = WBidHelper.GenerateFileNameUsingCurrentBidDetails();
                            //    WBidHelper.SaveStateFile(WBidHelper.GetAppDataPath() + "/" + fileToSave + ".WBS");
                            //}
                            this.NavigationController.TopViewController.NavigationItem.SetHidesBackButton(false, true);
                            loadingOverlay.Hide();
                            this.NavigationController.PopViewController(true);
                        });
                    });





                }
            }
            catch (Exception )
            {
                
                 this.NavigationController.TopViewController.NavigationItem.SetHidesBackButton(false, true);
            }
		}

        private void DisplayAlertView(string caption, string message)
        {
            new UIAlertView(caption, message, null, "OK", null).Show();



        }
        
	}
}
